name: 算法前端配置界面发布

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: ${{ matrix.os }} 创建Release
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
    steps:
      - name: 克隆代码
        uses: actions/checkout@v3
      - name: 创建发行版本
        continue-on-error: true
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: CONTRIBUTING.md
          draft: false
          prerelease: false
  other:
    name: 打包发布-操作系统版本:(${{ matrix.os }},Python版本:${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
#        os: ["windows-latest"] # "ubuntu-18.04", "windows-latest
        os: ["windows-latest"] # "ubuntu-18.04", "windows-latest","macos-latest"
        python-version: ["3.6"]
    steps:
 # 安装 Visual Studio 2019
      - name: Install Visual Studio 2019
        uses: microsoft/setup-vs-2019@v1
        with:
          # 组件选择 - 精简安装
          components: |
            Microsoft.VisualStudio.Workload.NativeDesktop
            Microsoft.VisualStudio.Component.VC.v141.x86.x64
            Microsoft.VisualStudio.Component.Windows10SDK.19041
            Microsoft.Component.MSBuild
            Microsoft.VisualStudio.Component.TestTools.BuildTools

        # 可选添加组件（根据需要添加）
        # additional-components: Microsoft.VisualStudio.Component.VC.v141.ARM64

    # 设置 VS2019 环境变量
      - name: Set up VS2019 environment
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          echo "VS2019DIR=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise" >> "%GITHUB_ENV%"
          echo "VCTOOLS_DIR=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\" >> "%GITHUB_ENV%"
        
          # 自动查找最新的工具版本
          for /F "tokens=*" %%d in ('dir /B /AD "%VCTOOLS_DIR%" ^| sort /R') do (
            set "TOOLSET_VERSION=%%d"
            goto :found
          )
          :found
          echo "Using toolset version: %TOOLSET_VERSION%"
          echo "TOOLSET_VERSION=%TOOLSET_VERSION%" >> "%GITHUB_ENV%"
          echo "::add-path::%VS2019DIR%\MSBuild\Current\Bin"
          echo "::add-path::%VCTOOLS_DIR%\%TOOLSET_VERSION%\bin\Hostx64\x64"

    # 验证安装
      - name: Verify VS2019 installation
        shell: cmd
        run: |
          where msbuild
          cl
          msbuild /version

      - name: 下载代码
        uses: actions/checkout@v3
        with:
          repository: jadehh/labelme
          ref: main
          path: code
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
      - name: Windows操作系统安装Inno Setup 下载
        if: runner.os == 'Windows'
        uses: actions/checkout@v3
        with:
          repository: jadehh/InnoSetup
          path: InnoSetup
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
      - name: Windows 准备Python X86 环境
        if: runner.os == 'Windows'
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x86
      - name: pip升级
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
      - name: Windows操作系统准备打包环境
        shell: pwsh
        run: |
          cd code
          pip install -r requirements.txt
      - name: 编译打包
        env:
          PYTHONIOENCODING: "utf-8"
        shell: pwsh
        run: |
          cd code
          python packing.py   # --specify_files samplesMain.py

      - name: 测试是否打包完成
        shell: pwsh
        run: |
          cd code/Output
          ls
      # 发布
      - name: 发布
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files:
            "./code/Output/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # 给最高的权限
